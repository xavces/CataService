{"version":3,"sources":["../../src/pages/productDetails/productDetails.module.ts","../../node_modules/rxjs/add/operator/map.js","../../node_modules/@ionic-native/youtube-video-player/index.js","../../node_modules/@ionic-native/file/index.js","../../node_modules/@ionic-native/document-viewer/index.js","../../src/pages/productDetails/productDetails.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACO;AACM;AACI;AACc;AACT;AACrB;AAmB1C,IAAa,wBAAwB;IAArC;IAAwC,CAAC;IAAD,+BAAC;AAAD,CAAC;AAA5B,wBAAwB;IAjBpC,+DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2EAAkB;SACnB;QACD,OAAO,EAAE;YACP,gFAAsB;YACtB,sEAAe,CAAC,QAAQ,CAAC,2EAAkB,CAAC;SAC7C;QACD,SAAS,EAAE;YACT,8FAAkB;YAClB,qFAAc;YACd,gEAAI;SACL;QACD,OAAO,EAAE;YACP,2EAAkB;SACnB;KACF,CAAC;GACW,wBAAwB,CAAI;AAAJ;;;;;;;;;ACzBrC;AACA;AACA;AACA;AACA,+B;;;;;;;;;;ACJA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA,iEAAiE;AACjE;AACA,SAAS,kEAAmB;AAC5B;AACA;AACA,qDAAqD,WAAW;AAChE;AACA,qFAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR,iC;;;;;;;;;;AC/EA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AAC8C;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,kCAAkC;AACvF,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,cAAc;AAC7B,eAAe,cAAc;AAC7B,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,cAAc;AAC7B,eAAe,cAAc;AAC7B,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,+BAA+B,WAAW,EAAE;AAC5C;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,cAAc;AAC7B,iBAAiB,cAAc;AAC/B;AACA;AACA,qDAAqD,gBAAgB;AACrE;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8CAA8C;AAC9E;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,4BAA4B,OAAO;AACnC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C,6BAA6B,OAAO;AACpC,qBAAqB,MAAM;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C,wBAAwB,OAAO;AAC/B,qBAAqB,MAAM;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAiC;AAC1D,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAiC;AAC1D,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,kEAAmB;AAC5B;AACA;AACA,uCAAuC,WAAW;AACliC;;;;;;;;;;AC76BA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC6C;AACxB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,aAAa;AAC9B;AACA,2DAA2D,QAAQ;AACnE;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,2BAA2B,OAAO;AAClC,uBAAuB,6BAA6B;AACpD,4BAA4B;AAC5B,8BAA8B;AAC9B,8BAA8B;AAC9B,yBAAyB;AACzB;AACA,sIAAsI;AACtI;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,2BAA2B,OAAO;AAClC,uBAAuB,sBAAsB;AAC7C,wBAAwB;AACxB,yBAAyB;AACzB,8BAA8B;AAC9B,yBAAyB;AACzB;AACA,0HAA0H;AAC1H;AACA,SAAS,kEAAmB;AAC5B;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,qFAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR,iC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnH0C;AAC0C;AAC/C;AACK;AACX;AAE0B;AAEe;AAEc;AAEzC;AAE7C;;;;;EAKE;AAMF,IAAa,kBAAkB;IAS7B,yCAAyC;IACzC,iEAAiE;IACjE,6BAA6B;IAC7B,mDAAmD;IACnD,iCAAiC;IACjC,6BAA6B;IAC7B,KAAK;IAEL,gBAAgB;IAEhB,8BAA8B;IAC9B,oCAAoC;IAEpC,4BAAmB,OAAsB,EAAS,SAAoB,EAAS,QAAkB,EAAU,IAAU,EAC5G,SAA0B,EAAE,IAAS,EAAU,OAA2B,EAAU,YAA4B,EAAS,eAAsC;QADxK,iBA+CC;QA/CkB,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,aAAQ,GAAR,QAAQ,CAAU;QAAU,SAAI,GAAJ,IAAI,CAAM;QAC5G,cAAS,GAAT,SAAS,CAAiB;QAAqB,YAAO,GAAP,OAAO,CAAoB;QAAU,iBAAY,GAAZ,YAAY,CAAgB;QAAS,oBAAe,GAAf,eAAe,CAAuB;QAEtK,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;QACnE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAE5C,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAnB,CAAmB,CAAC,CAAC;QACrF,QAAQ,CAAC,SAAS,CAAC,cAAI;YACrB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,CAAC,IAAI,EAAf,CAAe,CAAC,CAAC;QAC7E,QAAQ,CAAC,SAAS,CAAC,cAAI;YACrB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;QAEH,IAAI,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAnB,CAAmB,CAAC,CAAC;QACxF,WAAW,CAAC,SAAS,CAAC,cAAI;YACxB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,CAAC,OAAO,EAAlB,CAAkB,CAAC,CAAC;QACpF,SAAS,CAAC,SAAS,CAAC,cAAI;YACtB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAClD,CAAC;gBACC,IAAI,SAAS,GAAG,IAAI,CAAC;gBACrB,IAAI,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC;gBAC7C,IAAI,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;gBACxB,GAAG,CAAC,CAAc,UAAuB,EAAvB,UAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAvB,cAAuB,EAAvB,IAAuB;oBAApC,IAAI,KAAK;oBAEZ,EAAE,CAAC,CAAC,KAAK,IAAI,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAClD,CAAC;wBACC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACpB,CAAC;iBACF;gBACD,GAAG,CAAC,CAAa,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK;oBAAjB,IAAI,IAAI;oBACX,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,oBAAoB,CAAC,EAAC;wBACnC,SAAS,GAAG,KAAK,CAAC;oBACpB,CAAC;iBACF;gBACD,EAAE,CAAC,CAAC,SAAS,CAAC,EAAC;oBACb,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC;gBAChE,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,oCAAO,GAAP,UAAQ,SAAS;QACf,IAAM,OAAO,GAA0B;YACrC,KAAK,EAAE,SAAS;SACjB;QACD,IAAI,IAAI,GAAE,oDAAoD;QAC9D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC;QAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,QAAQ,GAAG,0BAA0B,CAAC;QAC7C,CAAC;QACD,IAAI,EAAC;YACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC;QACD,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,GAAC,SAAS,GAAC,MAAM,EAAE,iBAAiB,EAAE,OAAO,CAAC;QAC1F,yGAAyG;IAC3G,CAAC;IAED,oCAAO,GAAP,UAAQ,WAAW;QACjB,IAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,WAAW,CAAC;QACvD,MAAM,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,wCAAW,GAAX;QACE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC;IAChE,CAAC;IAED,iCAAI,GAAJ;QACE,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,6CAAgB,GAAhB;QACE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;IAC5C,CAAC;IAED,uCAAU,GAAV;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,iEAAiB,EAAE;YACnC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,QAAQ;SACjD,CAAC,CAAC;IACL,CAAC;IAED,6CAAgB,GAAhB;QACE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;IAC5C,CAAC;IAEH,yBAAC;AAAD,CAAC;AApHY,kBAAkB;IAJ9B,gEAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;OACE;KACnC,CAAC;2OAuB4B,CAAa,sFAAgD,iFAA4B;QACjG,eAAoJ;AA6FzK;SApHY,kBAAkB,e","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ProductDetailsPage } from './productDetails';\nimport { IonicImageViewerModule } from 'ionic-img-viewer';\nimport { YoutubeVideoPlayer } from '@ionic-native/youtube-video-player';\nimport { DocumentViewer } from '@ionic-native/document-viewer';\nimport { File } from '@ionic-native/file';\n\n@NgModule({\n  declarations: [\n    ProductDetailsPage\n  ],\n  imports: [\n    IonicImageViewerModule,\n    IonicPageModule.forChild(ProductDetailsPage)\n  ],\n  providers: [\n    YoutubeVideoPlayer,\n    DocumentViewer,\n    File\n  ],\n  exports: [\n    ProductDetailsPage,\n  ]\n})\nexport class ProductDetailsPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/productDetails/productDetails.module.ts","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar map_1 = require('../../operator/map');\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/operator/map.js\n// module id = 343\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Youtube Video Player\n * @description\n * Plays YouTube videos in Native YouTube App\n *\n * @usage\n * For Android 5.0+ you will need to add the following to config.xml\n * ```xml\n * <preference name=\"YouTubeDataApiKey\" value=\"[YOUR YOUTUBE API]\" />\n * ```\n * For more information: https://developers.google.com/youtube/v3/getting-started\n *\n *\n * ```typescript\n * import { YoutubeVideoPlayer } from '@ionic-native/youtube-video-player';\n *\n * constructor(private youtube: YoutubeVideoPlayer) { }\n *\n * ...\n *\n *\n * this.youtube.openVideo('myvideoid');\n *\n * ```\n */\nvar YoutubeVideoPlayer = (function (_super) {\n    __extends(YoutubeVideoPlayer, _super);\n    function YoutubeVideoPlayer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Plays a YouTube video\n     * @param videoId {string} Video ID\n     */\n    YoutubeVideoPlayer.prototype.openVideo = function (videoId) { };\n    YoutubeVideoPlayer.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    YoutubeVideoPlayer.ctorParameters = function () { return []; };\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], YoutubeVideoPlayer.prototype, \"openVideo\", null);\n    YoutubeVideoPlayer = __decorate([\n        Plugin({\n            pluginName: 'YoutubeVideoPlayer',\n            plugin: 'cordova-plugin-youtube-video-player',\n            pluginRef: 'YoutubeVideoPlayer',\n            repo: 'https://github.com/ihadeed/CordovaYoutubeVideoPlayer',\n            platforms: ['Android', 'iOS']\n        })\n    ], YoutubeVideoPlayer);\n    return YoutubeVideoPlayer;\n}(IonicNativePlugin));\nexport { YoutubeVideoPlayer };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/youtube-video-player/index.js\n// module id = 722\n// module chunks = 8 9 10","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { CordovaProperty, Plugin, CordovaCheck, IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name File\n * @description\n * This plugin implements a File API allowing read/write access to files residing on the device.\n *\n * The File class implements static convenience functions to access files and directories.\n *\n * Example:\n * ```\n * import { File } from '@ionic-native/file';\n *\n * constructor(private file: File) { }\n *\n * ...\n *\n * this.file.checkDir(this.file.dataDirectory, 'mydir').then(_ => console.log('Directory exists')).catch(err => console.log('Directory doesnt exist'));\n *\n * ```\n *\n *  This plugin is based on several specs, including : The HTML5 File API http: //www.w3.org/TR/FileAPI/\n *  The (now-defunct) Directories and System extensions Latest: http: //www.w3.org/TR/2012/WD-file-system-api-20120417/\n *  Although most of the plugin code was written when an earlier spec was current: http: //www.w3.org/TR/2011/WD-file-system-api-20110419/\n *  It also implements the FileWriter spec : http: //dev.w3.org/2009/dap/file-system/file-writer.html\n *  @interfaces\n *  IFile\n *  Entry\n *  DirectoryEntry\n *  DirectoryReader\n *  FileSystem\n */\nvar File = (function (_super) {\n    __extends(File, _super);\n    function File() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cordovaFileError = {\n            1: 'NOT_FOUND_ERR',\n            2: 'SECURITY_ERR',\n            3: 'ABORT_ERR',\n            4: 'NOT_READABLE_ERR',\n            5: 'ENCODING_ERR',\n            6: 'NO_MODIFICATION_ALLOWED_ERR',\n            7: 'INVALID_STATE_ERR',\n            8: 'SYNTAX_ERR',\n            9: 'INVALID_MODIFICATION_ERR',\n            10: 'QUOTA_EXCEEDED_ERR',\n            11: 'TYPE_MISMATCH_ERR',\n            12: 'PATH_EXISTS_ERR',\n            13: 'WRONG_ENTRY_TYPE',\n            14: 'DIR_READ_ERR',\n        };\n        return _this;\n    }\n    /**\n     * Get free disk space in Bytes\n     * @returns {Promise<number>} Returns a promise that resolves with the remaining free disk space in Bytes\n     */\n    File.prototype.getFreeDiskSpace = function () {\n        return new Promise(function (resolve, reject) {\n            cordova.exec(resolve, reject, 'File', 'getFreeDiskSpace', []);\n        });\n    };\n    /**\n     * Check if a directory exists in a certain path, directory.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} dir Name of directory to check\n     * @returns {Promise<boolean>} Returns a Promise that resolves to true if the directory exists or rejects with an error.\n     */\n    File.prototype.checkDir = function (path, dir) {\n        if ((/^\\//.test(dir))) {\n            var err = new FileError(5);\n            err.message = 'directory cannot start with \\/';\n            return Promise.reject(err);\n        }\n        var fullpath = path + dir;\n        return this.resolveDirectoryUrl(fullpath)\n            .then(function () {\n            return true;\n        });\n    };\n    /**\n     * Creates a new directory in the specific path.\n     * The replace boolean value determines whether to replace an existing directory with the same name.\n     * If an existing directory exists and the replace value is false, the promise will fail and return an error.\n     *\n     * @param {string} path  Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} dirName Name of directory to create\n     * @param {boolean} replace If true, replaces file with same name. If false returns error\n     * @returns {Promise<DirectoryEntry>} Returns a Promise that resolves with a DirectoryEntry or rejects with an error.\n     */\n    File.prototype.createDir = function (path, dirName, replace) {\n        var _this = this;\n        if ((/^\\//.test(dirName))) {\n            var err = new FileError(5);\n            err.message = 'directory cannot start with \\/';\n            return Promise.reject(err);\n        }\n        var options = {\n            create: true\n        };\n        if (!replace) {\n            options.exclusive = true;\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getDirectory(fse, dirName, options);\n        });\n    };\n    /**\n     * Remove a directory at a given path.\n     *\n     * @param {string} path The path to the directory\n     * @param {string} dirName The directory name\n     * @returns {Promise<RemoveResult>} Returns a Promise that resolves to a RemoveResult or rejects with an error.\n     */\n    File.prototype.removeDir = function (path, dirName) {\n        var _this = this;\n        if ((/^\\//.test(dirName))) {\n            var err = new FileError(5);\n            err.message = 'directory cannot start with \\/';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getDirectory(fse, dirName, { create: false });\n        })\n            .then(function (de) {\n            return _this.remove(de);\n        });\n    };\n    /**\n     * Move a directory to a given path.\n     *\n     * @param {string} path The source path to the directory\n     * @param {string} dirName The source directory name\n     * @param {string} newPath The destionation path to the directory\n     * @param {string} newDirName The destination directory name\n     * @returns {Promise<DirectoryEntry|Entry>} Returns a Promise that resolves to the new DirectoryEntry object or rejects with an error.\n     */\n    File.prototype.moveDir = function (path, dirName, newPath, newDirName) {\n        var _this = this;\n        newDirName = newDirName || dirName;\n        if ((/^\\//.test(newDirName))) {\n            var err = new FileError(5);\n            err.message = 'directory cannot start with \\/';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getDirectory(fse, dirName, { create: false });\n        })\n            .then(function (srcde) {\n            return _this.resolveDirectoryUrl(newPath)\n                .then(function (deste) {\n                return _this.move(srcde, deste, newDirName);\n            });\n        });\n    };\n    /**\n     * Copy a directory in various methods. If destination directory exists, will fail to copy.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} dirName Name of directory to copy\n     * @param {string} newPath Base FileSystem of new location\n     * @param {string} newDirName New name of directory to copy to (leave blank to remain the same)\n     * @returns {Promise<Entry>} Returns a Promise that resolves to the new Entry object or rejects with an error.\n     */\n    File.prototype.copyDir = function (path, dirName, newPath, newDirName) {\n        var _this = this;\n        if ((/^\\//.test(newDirName))) {\n            var err = new FileError(5);\n            err.message = 'directory cannot start with \\/';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getDirectory(fse, dirName, { create: false });\n        })\n            .then(function (srcde) {\n            return _this.resolveDirectoryUrl(newPath)\n                .then(function (deste) {\n                return _this.copy(srcde, deste, newDirName);\n            });\n        });\n    };\n    /**\n     * List files and directory from a given path.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} dirName Name of directory\n     * @returns {Promise<Entry[]>} Returns a Promise that resolves to an array of Entry objects or rejects with an error.\n     */\n    File.prototype.listDir = function (path, dirName) {\n        var _this = this;\n        if ((/^\\//.test(dirName))) {\n            var err = new FileError(5);\n            err.message = 'directory cannot start with \\/';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getDirectory(fse, dirName, { create: false, exclusive: false });\n        })\n            .then(function (de) {\n            var reader = de.createReader();\n            return _this.readEntries(reader);\n        });\n    };\n    /**\n     * Removes all files and the directory from a desired location.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} dirName Name of directory\n     * @returns {Promise<RemoveResult>} Returns a Promise that resolves with a RemoveResult or rejects with an error.\n     */\n    File.prototype.removeRecursively = function (path, dirName) {\n        var _this = this;\n        if ((/^\\//.test(dirName))) {\n            var err = new FileError(5);\n            err.message = 'directory cannot start with \\/';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getDirectory(fse, dirName, { create: false });\n        })\n            .then(function (de) {\n            return _this.rimraf(de);\n        });\n    };\n    /**\n     * Check if a file exists in a certain path, directory.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} file Name of file to check\n     * @returns {Promise<boolean>} Returns a Promise that resolves with a boolean or rejects with an error.\n     */\n    File.prototype.checkFile = function (path, file) {\n        if ((/^\\//.test(file))) {\n            var err = new FileError(5);\n            err.message = 'file cannot start with \\/';\n            return Promise.reject(err);\n        }\n        return this.resolveLocalFilesystemUrl(path + file)\n            .then(function (fse) {\n            if (fse.isFile) {\n                return true;\n            }\n            else {\n                var err = new FileError(13);\n                err.message = 'input is not a file';\n                return Promise.reject(err);\n            }\n        });\n    };\n    /**\n     * Creates a new file in the specific path.\n     * The replace boolean value determines whether to replace an existing file with the same name.\n     * If an existing file exists and the replace value is false, the promise will fail and return an error.\n     *\n     * @param {string} path  Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} fileName Name of file to create\n     * @param {boolean} replace If true, replaces file with same name. If false returns error\n     * @returns {Promise<FileEntry>} Returns a Promise that resolves to a FileEntry or rejects with an error.\n     */\n    File.prototype.createFile = function (path, fileName, replace) {\n        var _this = this;\n        if ((/^\\//.test(fileName))) {\n            var err = new FileError(5);\n            err.message = 'file-name cannot start with \\/';\n            return Promise.reject(err);\n        }\n        var options = {\n            create: true\n        };\n        if (!replace) {\n            options.exclusive = true;\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getFile(fse, fileName, options);\n        });\n    };\n    /**\n     * Removes a file from a desired location.\n     *\n     * @param {string} path  Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} fileName Name of file to remove\n     * @returns {Promise<RemoveResult>} Returns a Promise that resolves to a RemoveResult or rejects with an error.\n     */\n    File.prototype.removeFile = function (path, fileName) {\n        var _this = this;\n        if ((/^\\//.test(fileName))) {\n            var err = new FileError(5);\n            err.message = 'file-name cannot start with \\/';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getFile(fse, fileName, { create: false });\n        })\n            .then(function (fe) {\n            return _this.remove(fe);\n        });\n    };\n    /** Write a new file to the desired location.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} fileName path relative to base path\n     * @param {string | Blob} text content or blob to write\n     * @param {IWriteOptions} options replace file if set to true. See WriteOptions for more information.\n     * @returns {Promise<any>} Returns a Promise that resolves to updated file entry or rejects with an error.\n     */\n    File.prototype.writeFile = function (path, fileName, text, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        if ((/^\\//.test(fileName))) {\n            var err = new FileError(5);\n            err.message = 'file-name cannot start with \\/';\n            return Promise.reject(err);\n        }\n        var getFileOpts = {\n            create: !options.append,\n            exclusive: !options.replace\n        };\n        return this.resolveDirectoryUrl(path)\n            .then(function (directoryEntry) {\n            return _this.getFile(directoryEntry, fileName, getFileOpts);\n        })\n            .then(function (fileEntry) {\n            return _this.writeFileEntry(fileEntry, text, options);\n        });\n    };\n    /** Write content to FileEntry.\n     *\n     * @hidden\n     * @param {FileEntry} fe file entry object\n     * @param {string | Blob} text content or blob to write\n     * @param {IWriteOptions} options replace file if set to true. See WriteOptions for more information.\n     * @returns {Promise<FileEntry>} Returns a Promise that resolves to updated file entry or rejects with an error.\n     */\n    File.prototype.writeFileEntry = function (fe, text, options) {\n        var _this = this;\n        return this.createWriter(fe)\n            .then(function (writer) {\n            if (options.append) {\n                writer.seek(writer.length);\n            }\n            if (options.truncate) {\n                writer.truncate(options.truncate);\n            }\n            return _this.write(writer, text);\n        })\n            .then(function () { return fe; });\n    };\n    /** Write to an existing file.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} fileName path relative to base path\n     * @param {string | Blob} text content or blob to write\n     * @returns {Promise<void>} Returns a Promise that resolves or rejects with an error.\n     */\n    File.prototype.writeExistingFile = function (path, fileName, text) {\n        return this.writeFile(path, fileName, text, { replace: true });\n    };\n    /**\n     * Read the contents of a file as text.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} file Name of file, relative to path.\n     * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as string or rejects with an error.\n     */\n    File.prototype.readAsText = function (path, file) {\n        return this.readFile(path, file, 'Text');\n    };\n    /**\n     * Read file and return data as a base64 encoded data url.\n     * A data url is of the form:\n     *      data: [<mediatype>][;base64],<data>\n  \n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} file Name of file, relative to path.\n     * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as data URL or rejects with an error.\n     */\n    File.prototype.readAsDataURL = function (path, file) {\n        return this.readFile(path, file, 'DataURL');\n    };\n    /**\n     * Read file and return data as a binary data.\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} file Name of file, relative to path.\n     * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as string rejects with an error.\n     */\n    File.prototype.readAsBinaryString = function (path, file) {\n        return this.readFile(path, file, 'BinaryString');\n    };\n    /**\n     * Read file and return data as an ArrayBuffer.\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} file Name of file, relative to path.\n     * @returns {Promise<ArrayBuffer>} Returns a Promise that resolves with the contents of the file as ArrayBuffer or rejects with an error.\n     */\n    File.prototype.readAsArrayBuffer = function (path, file) {\n        return this.readFile(path, file, 'ArrayBuffer');\n    };\n    File.prototype.readFile = function (path, file, readAs) {\n        var _this = this;\n        if ((/^\\//.test(file))) {\n            var err = new FileError(5);\n            err.message = 'file-name cannot start with \\/';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (directoryEntry) {\n            return _this.getFile(directoryEntry, file, { create: false });\n        })\n            .then(function (fileEntry) {\n            var reader = new FileReader();\n            return new Promise(function (resolve, reject) {\n                reader.onloadend = function () {\n                    if (reader.result !== undefined || reader.result !== null) {\n                        resolve(reader.result);\n                    }\n                    else if (reader.error !== undefined || reader.error !== null) {\n                        reject(reader.error);\n                    }\n                    else {\n                        reject({ code: null, message: 'READER_ONLOADEND_ERR' });\n                    }\n                };\n                fileEntry.file(function (file) {\n                    reader[\"readAs\" + readAs].call(reader, file);\n                }, function (error) {\n                    reject(error);\n                });\n            });\n        });\n    };\n    /**\n     * Move a file to a given path.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} fileName Name of file to move\n     * @param {string} newPath Base FileSystem of new location\n     * @param {string} newFileName New name of file to move to (leave blank to remain the same)\n     * @returns {Promise<Entry>} Returns a Promise that resolves to the new Entry or rejects with an error.\n     */\n    File.prototype.moveFile = function (path, fileName, newPath, newFileName) {\n        var _this = this;\n        newFileName = newFileName || fileName;\n        if ((/^\\//.test(newFileName))) {\n            var err = new FileError(5);\n            err.message = 'file name cannot start with \\/';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getFile(fse, fileName, { create: false });\n        })\n            .then(function (srcfe) {\n            return _this.resolveDirectoryUrl(newPath)\n                .then(function (deste) {\n                return _this.move(srcfe, deste, newFileName);\n            });\n        });\n    };\n    /**\n     * Copy a file in various methods. If file exists, will fail to copy.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} fileName Name of file to copy\n     * @param {string} newPath Base FileSystem of new location\n     * @param {string} newFileName New name of file to copy to (leave blank to remain the same)\n     * @returns {Promise<Entry>} Returns a Promise that resolves to an Entry or rejects with an error.\n     */\n    File.prototype.copyFile = function (path, fileName, newPath, newFileName) {\n        var _this = this;\n        newFileName = newFileName || fileName;\n        if ((/^\\//.test(newFileName))) {\n            var err = new FileError(5);\n            err.message = 'file name cannot start with \\/';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getFile(fse, fileName, { create: false });\n        })\n            .then(function (srcfe) {\n            return _this.resolveDirectoryUrl(newPath)\n                .then(function (deste) {\n                return _this.copy(srcfe, deste, newFileName);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.fillErrorMessage = function (err) {\n        try {\n            err.message = this.cordovaFileError[err.code];\n        }\n        catch (e) { }\n    };\n    /**\n     * Resolves a local file system URL\n     * @param fileUrl {string} file system url\n     * @returns {Promise<Entry>}\n     */\n    File.prototype.resolveLocalFilesystemUrl = function (fileUrl) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            try {\n                window.resolveLocalFileSystemURL(fileUrl, function (entry) {\n                    resolve(entry);\n                }, function (err) {\n                    _this.fillErrorMessage(err);\n                    reject(err);\n                });\n            }\n            catch (xc) {\n                _this.fillErrorMessage(xc);\n                reject(xc);\n            }\n        });\n    };\n    /**\n     * Resolves a local directory url\n     * @param directoryUrl {string} directory system url\n     * @returns {Promise<DirectoryEntry>}\n     */\n    File.prototype.resolveDirectoryUrl = function (directoryUrl) {\n        return this.resolveLocalFilesystemUrl(directoryUrl)\n            .then(function (de) {\n            if (de.isDirectory) {\n                return de;\n            }\n            else {\n                var err = new FileError(13);\n                err.message = 'input is not a directory';\n                return Promise.reject(err);\n            }\n        });\n    };\n    /**\n     * Get a directory\n     * @param directoryEntry {DirectoryEntry} Directory entry, obtained by resolveDirectoryUrl method\n     * @param directoryName {string} Directory name\n     * @param flags {Flags} Options\n     * @returns {Promise<DirectoryEntry>}\n     */\n    File.prototype.getDirectory = function (directoryEntry, directoryName, flags) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            try {\n                directoryEntry.getDirectory(directoryName, flags, function (de) {\n                    resolve(de);\n                }, function (err) {\n                    _this.fillErrorMessage(err);\n                    reject(err);\n                });\n            }\n            catch (xc) {\n                _this.fillErrorMessage(xc);\n                reject(xc);\n            }\n        });\n    };\n    /**\n     * Get a file\n     * @param directoryEntry {DirectoryEntry} Directory entry, obtained by resolveDirectoryUrl method\n     * @param fileName {string} File name\n     * @param flags {Flags} Options\n     * @returns {Promise<FileEntry>}\n     */\n    File.prototype.getFile = function (directoryEntry, fileName, flags) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            try {\n                directoryEntry.getFile(fileName, flags, resolve, function (err) {\n                    _this.fillErrorMessage(err);\n                    reject(err);\n                });\n            }\n            catch (xc) {\n                _this.fillErrorMessage(xc);\n                reject(xc);\n            }\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.remove = function (fe) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            fe.remove(function () {\n                resolve({ success: true, fileRemoved: fe });\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.move = function (srce, destdir, newName) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            srce.moveTo(destdir, newName, function (deste) {\n                resolve(deste);\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.copy = function (srce, destdir, newName) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            srce.copyTo(destdir, newName, function (deste) {\n                resolve(deste);\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.readEntries = function (dr) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            dr.readEntries(function (entries) {\n                resolve(entries);\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.rimraf = function (de) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            de.removeRecursively(function () {\n                resolve({ success: true, fileRemoved: de });\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.createWriter = function (fe) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            fe.createWriter(function (writer) {\n                resolve(writer);\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.write = function (writer, gu) {\n        if (gu instanceof Blob) {\n            return this.writeFileInChunks(writer, gu);\n        }\n        return new Promise(function (resolve, reject) {\n            writer.onwriteend = function (evt) {\n                if (writer.error) {\n                    reject(writer.error);\n                }\n                else {\n                    resolve(evt);\n                }\n            };\n            writer.write(gu);\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.writeFileInChunks = function (writer, file) {\n        var BLOCK_SIZE = 1024 * 1024;\n        var writtenSize = 0;\n        function writeNextChunk() {\n            var size = Math.min(BLOCK_SIZE, file.size - writtenSize);\n            var chunk = file.slice(writtenSize, writtenSize + size);\n            writtenSize += size;\n            writer.write(chunk);\n        }\n        return new Promise(function (resolve, reject) {\n            writer.onerror = reject;\n            writer.onwrite = function () {\n                if (writtenSize < file.size) {\n                    writeNextChunk();\n                }\n                else {\n                    resolve();\n                }\n            };\n            writeNextChunk();\n        });\n    };\n    File.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    File.ctorParameters = function () { return []; };\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"applicationDirectory\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"applicationStorageDirectory\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"dataDirectory\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"cacheDirectory\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"externalApplicationStorageDirectory\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"externalDataDirectory\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"externalCacheDirectory\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"externalRootDirectory\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"tempDirectory\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"syncedDataDirectory\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"documentsDirectory\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"sharedDirectory\", void 0);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"getFreeDiskSpace\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"checkDir\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, Boolean]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"createDir\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"removeDir\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"moveDir\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"copyDir\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"listDir\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"removeRecursively\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"checkFile\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, Boolean]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"createFile\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"removeFile\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, Object, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"writeFile\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"writeExistingFile\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"readAsText\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"readAsDataURL\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"readAsBinaryString\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"readAsArrayBuffer\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"moveFile\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"copyFile\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"resolveLocalFilesystemUrl\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"resolveDirectoryUrl\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, String, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"getDirectory\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, String, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"getFile\", null);\n    File = __decorate([\n        Plugin({\n            pluginName: 'File',\n            plugin: 'cordova-plugin-file',\n            pluginRef: 'cordova.file',\n            repo: 'https://github.com/apache/cordova-plugin-file',\n            platforms: ['Android', 'Browser', 'iOS', 'macOS', 'Windows']\n        })\n    ], File);\n    return File;\n}(IonicNativePlugin));\nexport { File };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/file/index.js\n// module id = 733\n// module chunks = 8","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\nimport { Injectable } from '@angular/core';\n/**\n * @name Document Viewer\n * @description\n * This plugin offers a slim API to view PDF files which are either stored in the apps assets folder (/www/*) or in any other file system directory available via the cordova file plugin.\n *\n * @usage\n * ```typescript\n * import { DocumentViewer } from '@ionic-native/document-viewer';\n *\n *\n * constructor(private document: DocumentViewer) { }\n *\n * ...\n * const options: DocumentViewerOptions = {\n *   title: 'My PDF'\n * }\n *\n * this.document.viewDocument('assets/myFile.pdf', 'application/pdf', options)\n *\n * ```\n *\n * @interfaces\n * DocumentViewerOptions\n */\nvar DocumentViewer = (function (_super) {\n    __extends(DocumentViewer, _super);\n    function DocumentViewer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Displays the email composer pre-filled with data.\n     *\n     * @returns {Promise<any>} Resolves promise when the EmailComposer has been opened\n     */\n    DocumentViewer.prototype.getSupportInfo = function () { return; };\n    /**\n     * Check if the document can be shown\n     *\n     * @param url {string} Url to the file\n     * @param contentType {string} Content type of the file\n     * @param options {Array<DocumentViewerOptions>} options\n     * @param [onPossible] {Function}\n     * @param [onMissingApp] {Function}\n     * @param [onImpossible] {Function}\n     * @param [onError] {Function}\n     */\n    DocumentViewer.prototype.canViewDocument = function (url, contentType, options, onPossible, onMissingApp, onImpossible, onError) { };\n    /**\n     * Opens the file\n     *\n     * @param url {string} Url to the file\n     * @param contentType {string} Content type of the file\n     * @param options {DocumentViewerOptions} options\n     * @param [onShow] {Function}\n     * @param [onClose] {Function}\n     * @param [onMissingApp] {Function}\n     * @param [onError] {Function}\n     */\n    DocumentViewer.prototype.viewDocument = function (url, contentType, options, onShow, onClose, onMissingApp, onError) { };\n    DocumentViewer.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    DocumentViewer.ctorParameters = function () { return []; };\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], DocumentViewer.prototype, \"getSupportInfo\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, Object, Function, Function, Function, Function]),\n        __metadata(\"design:returntype\", void 0)\n    ], DocumentViewer.prototype, \"canViewDocument\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, Object, Function, Function, Function, Function]),\n        __metadata(\"design:returntype\", void 0)\n    ], DocumentViewer.prototype, \"viewDocument\", null);\n    DocumentViewer = __decorate([\n        Plugin({\n            pluginName: 'Document Viewer',\n            plugin: 'cordova-plugin-document-viewer',\n            pluginRef: 'SitewaertsDocumentViewer',\n            repo: 'https://github.com/sitewaerts/cordova-plugin-document-viewer',\n            platforms: ['Android', 'iOS', 'Windows']\n        })\n    ], DocumentViewer);\n    return DocumentViewer;\n}(IonicNativePlugin));\nexport { DocumentViewer };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/document-viewer/index.js\n// module id = 734\n// module chunks = 8","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ToastController, Platform } from 'ionic-angular';\nimport { Http } from '@angular/http';\nimport { File } from '@ionic-native/file';\nimport 'rxjs/add/operator/map';\n\nimport { ImageViewerController } from \"ionic-img-viewer\";\n\nimport { YoutubeVideoPlayer } from '@ionic-native/youtube-video-player';\n\nimport { DocumentViewer, DocumentViewerOptions } from '@ionic-native/document-viewer';\n\nimport { MarqueDetailsPage } from '../pages';\n\n/**\n * The Welcome Page is a splash page that quickly describes the app,\n * and then directs the user to create an account or log in.\n * If you'd like to immediately put the user onto a login/signup page,\n * we recommend not using the Welcome page.\n*/\n@IonicPage()\n@Component({\n  selector: 'page-product-details',\n  templateUrl: 'productDetails.html'\n})\nexport class ProductDetailsPage {\n\n  productId;\n  tabBarElement: any;\n  products: any[];\n  services: any[];\n  news: any[];\n  marques: any[];\n  pathFile: any;\n  // The account fields for the login form.\n  // If you're using the username field with or without email, make\n  // sure to add it to the type\n  // account: { email: string, password: string } = {\n  //   email: '@ e-mail ou pseudo',\n  //   password: 'mot de passe'\n  // };\n\n  // like = false;\n\n  // Our translated text strings\n  // private loginErrorString: string;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public platform: Platform, private file: File,\n    public toastCtrl: ToastController, http:Http, private youtube: YoutubeVideoPlayer, private documentView: DocumentViewer, public imageViewerCtrl: ImageViewerController) {\n    \n    this.tabBarElement = document.querySelector('.tabbar.show-tabbar');\n    this.productId = navParams.get('productId');  \n\n    let servData = http.get('assets/data/services.json').map(res => res.json().services);\n    servData.subscribe(data => {\n      this.services = data;\n    });\n\n    let newsData = http.get('assets/data/news.json').map(res => res.json().news);\n    newsData.subscribe(data => {\n      this.news = data;\n    });\n\n    let productData = http.get('assets/data/products.json').map(res => res.json().products);\n    productData.subscribe(data => {\n      this.products = data;\n    });\n\n    let brandData = http.get('assets/data/marques.json').map(res => res.json().marques);\n    brandData.subscribe(data => {\n      this.marques = data;\n      if (this.products[this.productId].videoId != null)\n      {\n        let openVideo = true;\n        var vlength = this.navCtrl.getViews().length;\n        let final = new Array();\n        for (let views of this.navCtrl.getViews())\n        {\n          if (views != this.navCtrl.getViews()[vlength - 1])\n          {\n            final.push(views);\n          }\n        }\n        for (let view of final){\n          if (view.id == \"ProductDetailsPage\"){\n            openVideo = false;\n          }\n        }\n        if (openVideo){\n          this.youtube.openVideo(this.products[this.productId].videoId);\n        }\n      }\n    });\n\n  }\n\n  openPDF(productId){\n    const options: DocumentViewerOptions = {\n      title: productId\n    }\n    var path =\"file:///android_asset/www/assets/img/products/pdf/\"\n    console.log(this.file.documentsDirectory)\n    console.log(this.file.dataDirectory)\n    console.log(this.file.externalDataDirectory)\n    if (this.platform.is(\"ios\")) {\n      this.pathFile = 'assets/img/products/pdf/';\n    }\n    else{\n      this.pathFile = path;\n    }\n    this.documentView.viewDocument(this.pathFile+productId+'.pdf', 'application/pdf', options)\n    //this.documentView.viewDocument('assets/img/products/pdf/'+productId+'.pdf', 'application/pdf', options)\n  }\n\n  openImg(imageToView) {\n    const viewer = this.imageViewerCtrl.create(imageToView)\n    viewer.present();\n  }\n\n  replayVideo(){\n    this.youtube.openVideo(this.products[this.productId].videoId);\n  }\n\n  prev() {\n    this.navCtrl.pop();\n  }\n\n  ionViewWillEnter(){\n    this.tabBarElement.style.display = 'none';\n  }\n\n  showMarque(){\n    this.navCtrl.push(MarqueDetailsPage, {\n      marqueId: this.products[this.productId].idMarque\n    });\n  }\n\n  ionViewWillLeave(){\n    this.tabBarElement.style.display = 'flex';\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/productDetails/productDetails.ts"],"sourceRoot":""}